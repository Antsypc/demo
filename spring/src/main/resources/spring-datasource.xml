<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:config/db.properties" ignore-unresolvable="true"/>


    <bean id="labmsDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
          p:driverClass="${jdbc.labms.driver}"
          p:jdbcUrl="${jdbc.labms.url}"
          p:user="${jdbc.labms.username}"
          p:password="${jdbc.labms.password}"
          p:maxPoolSize="${maxPoolSize}"
          p:minPoolSize="${minPoolSize}"
          p:initialPoolSize="${initialPoolSize}"
          p:maxIdleTime="${maxIdleTime}"
          p:checkoutTimeout="${checkoutTimeout}"
          p:acquireIncrement="${acquireIncrement}"
          p:acquireRetryAttempts="${acquireRetryAttempts}"
          p:acquireRetryDelay="${acquireRetryDelay}"
          p:autoCommitOnClose="${autoCommitOnClose}"
          p:idleConnectionTestPeriod="${idleConnectionTestPeriod}"
          p:maxStatements="${maxStatements}"
          p:maxStatementsPerConnection="${maxStatementsPerConnection}"/>

    <bean id="labmsTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="labmsDataSource"/>

    <!-- Spring JdbcTemplate -->
    <bean id="labmsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="labmsDataSource"/>

    <!-- ========================================针对myBatis的配置项============================== -->
    <!-- 配置 sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <property name="dataSource" ref="labmsDataSource"/>
        <property name="configLocation" value="classpath:config/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:config/mapper/*.xml"/>
        <!-- 扫描包,自动识别别名,如果有多个包用`;`隔开 -->
        <property name="typeAliasesPackage" value="xyz.antsgroup.demo.spring.paging"/>
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>
    <!--&lt;!&ndash; 配置扫描器,扫描 DAO 接口的包,注入 bean 容器.这样就不用去实现接口,框架自动实现接口类 &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--&lt;!&ndash; 注入 bean &ndash;&gt;-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
        <!--&lt;!&ndash; 扫描这个包以及它的子包下的所有映射接口类 &ndash;&gt;-->
        <!--<property name="basePackage" value="xyz.antsgroup.demo.spring.paging"/>-->
    <!--</bean>-->

    <!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="labmsDataSource"/>
    </bean>




    <tx:annotation-driven transaction-manager="labmsTransactionManager"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <aop:aspectj-autoproxy/>


</beans>